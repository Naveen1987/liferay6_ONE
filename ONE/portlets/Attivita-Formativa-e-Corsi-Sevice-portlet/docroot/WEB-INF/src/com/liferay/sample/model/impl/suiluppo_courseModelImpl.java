/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.sample.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.liferay.sample.model.suiluppo_course;
import com.liferay.sample.model.suiluppo_courseModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the suiluppo_course service. Represents a row in the &quot;suiluppo_course&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.liferay.sample.model.suiluppo_courseModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link suiluppo_courseImpl}.
 * </p>
 *
 * @author Naveen Kumar
 * @see suiluppo_courseImpl
 * @see com.liferay.sample.model.suiluppo_course
 * @see com.liferay.sample.model.suiluppo_courseModel
 * @generated
 */
public class suiluppo_courseModelImpl extends BaseModelImpl<suiluppo_course>
	implements suiluppo_courseModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a suiluppo_course model instance should use the {@link com.liferay.sample.model.suiluppo_course} interface instead.
	 */
	public static final String TABLE_NAME = "suiluppo_course";
	public static final Object[][] TABLE_COLUMNS = {
			{ "course_id", Types.BIGINT },
			{ "Docente", Types.VARCHAR },
			{ "Evento_Progetto", Types.VARCHAR },
			{ "Titolo", Types.VARCHAR },
			{ "Descrizione", Types.VARCHAR },
			{ "Figure_Professionali_Coinvolte", Types.VARCHAR },
			{ "Data_Inizio", Types.VARCHAR },
			{ "Data_Fine", Types.VARCHAR },
			{ "Tot_Ore", Types.VARCHAR },
			{ "Nr_Edizione", Types.VARCHAR },
			{ "Sede", Types.VARCHAR },
			{ "Abstract", Types.VARCHAR },
			{ "Dispensa_corso", Types.VARCHAR },
			{ "Ammessi_al_corso", Types.BIGINT },
			{ "Scadenza_Iscrizioni", Types.VARCHAR },
			{ "Visibile", Types.VARCHAR },
			{ "Bloccato", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table suiluppo_course (course_id LONG not null primary key,Docente VARCHAR(75) null,Evento_Progetto VARCHAR(75) null,Titolo VARCHAR(75) null,Descrizione VARCHAR(75) null,Figure_Professionali_Coinvolte VARCHAR(75) null,Data_Inizio VARCHAR(75) null,Data_Fine VARCHAR(75) null,Tot_Ore VARCHAR(75) null,Nr_Edizione VARCHAR(75) null,Sede VARCHAR(75) null,Abstract VARCHAR(75) null,Dispensa_corso VARCHAR(75) null,Ammessi_al_corso LONG,Scadenza_Iscrizioni VARCHAR(75) null,Visibile VARCHAR(75) null,Bloccato VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table suiluppo_course";
	public static final String ORDER_BY_JPQL = " ORDER BY suiluppo_course.course_id ASC";
	public static final String ORDER_BY_SQL = " ORDER BY suiluppo_course.course_id ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.liferay.sample.model.suiluppo_course"),
			false);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.liferay.sample.model.suiluppo_course"),
			false);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.liferay.sample.model.suiluppo_course"));

	public suiluppo_courseModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _course_id;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setCourse_id(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _course_id;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return suiluppo_course.class;
	}

	@Override
	public String getModelClassName() {
		return suiluppo_course.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("course_id", getCourse_id());
		attributes.put("Docente", getDocente());
		attributes.put("Evento_Progetto", getEvento_Progetto());
		attributes.put("Titolo", getTitolo());
		attributes.put("Descrizione", getDescrizione());
		attributes.put("Figure_Professionali_Coinvolte",
			getFigure_Professionali_Coinvolte());
		attributes.put("Data_Inizio", getData_Inizio());
		attributes.put("Data_Fine", getData_Fine());
		attributes.put("Tot_Ore", getTot_Ore());
		attributes.put("Nr_Edizione", getNr_Edizione());
		attributes.put("Sede", getSede());
		attributes.put("Abstract", getAbstract());
		attributes.put("Dispensa_corso", getDispensa_corso());
		attributes.put("Ammessi_al_corso", getAmmessi_al_corso());
		attributes.put("Scadenza_Iscrizioni", getScadenza_Iscrizioni());
		attributes.put("Visibile", getVisibile());
		attributes.put("Bloccato", getBloccato());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long course_id = (Long)attributes.get("course_id");

		if (course_id != null) {
			setCourse_id(course_id);
		}

		String Docente = (String)attributes.get("Docente");

		if (Docente != null) {
			setDocente(Docente);
		}

		String Evento_Progetto = (String)attributes.get("Evento_Progetto");

		if (Evento_Progetto != null) {
			setEvento_Progetto(Evento_Progetto);
		}

		String Titolo = (String)attributes.get("Titolo");

		if (Titolo != null) {
			setTitolo(Titolo);
		}

		String Descrizione = (String)attributes.get("Descrizione");

		if (Descrizione != null) {
			setDescrizione(Descrizione);
		}

		String Figure_Professionali_Coinvolte = (String)attributes.get(
				"Figure_Professionali_Coinvolte");

		if (Figure_Professionali_Coinvolte != null) {
			setFigure_Professionali_Coinvolte(Figure_Professionali_Coinvolte);
		}

		String Data_Inizio = (String)attributes.get("Data_Inizio");

		if (Data_Inizio != null) {
			setData_Inizio(Data_Inizio);
		}

		String Data_Fine = (String)attributes.get("Data_Fine");

		if (Data_Fine != null) {
			setData_Fine(Data_Fine);
		}

		String Tot_Ore = (String)attributes.get("Tot_Ore");

		if (Tot_Ore != null) {
			setTot_Ore(Tot_Ore);
		}

		String Nr_Edizione = (String)attributes.get("Nr_Edizione");

		if (Nr_Edizione != null) {
			setNr_Edizione(Nr_Edizione);
		}

		String Sede = (String)attributes.get("Sede");

		if (Sede != null) {
			setSede(Sede);
		}

		String Abstract = (String)attributes.get("Abstract");

		if (Abstract != null) {
			setAbstract(Abstract);
		}

		String Dispensa_corso = (String)attributes.get("Dispensa_corso");

		if (Dispensa_corso != null) {
			setDispensa_corso(Dispensa_corso);
		}

		Long Ammessi_al_corso = (Long)attributes.get("Ammessi_al_corso");

		if (Ammessi_al_corso != null) {
			setAmmessi_al_corso(Ammessi_al_corso);
		}

		String Scadenza_Iscrizioni = (String)attributes.get(
				"Scadenza_Iscrizioni");

		if (Scadenza_Iscrizioni != null) {
			setScadenza_Iscrizioni(Scadenza_Iscrizioni);
		}

		String Visibile = (String)attributes.get("Visibile");

		if (Visibile != null) {
			setVisibile(Visibile);
		}

		String Bloccato = (String)attributes.get("Bloccato");

		if (Bloccato != null) {
			setBloccato(Bloccato);
		}
	}

	@Override
	public long getCourse_id() {
		return _course_id;
	}

	@Override
	public void setCourse_id(long course_id) {
		_course_id = course_id;
	}

	@Override
	public String getDocente() {
		if (_Docente == null) {
			return StringPool.BLANK;
		}
		else {
			return _Docente;
		}
	}

	@Override
	public void setDocente(String Docente) {
		_Docente = Docente;
	}

	@Override
	public String getEvento_Progetto() {
		if (_Evento_Progetto == null) {
			return StringPool.BLANK;
		}
		else {
			return _Evento_Progetto;
		}
	}

	@Override
	public void setEvento_Progetto(String Evento_Progetto) {
		_Evento_Progetto = Evento_Progetto;
	}

	@Override
	public String getTitolo() {
		if (_Titolo == null) {
			return StringPool.BLANK;
		}
		else {
			return _Titolo;
		}
	}

	@Override
	public void setTitolo(String Titolo) {
		_Titolo = Titolo;
	}

	@Override
	public String getDescrizione() {
		if (_Descrizione == null) {
			return StringPool.BLANK;
		}
		else {
			return _Descrizione;
		}
	}

	@Override
	public void setDescrizione(String Descrizione) {
		_Descrizione = Descrizione;
	}

	@Override
	public String getFigure_Professionali_Coinvolte() {
		if (_Figure_Professionali_Coinvolte == null) {
			return StringPool.BLANK;
		}
		else {
			return _Figure_Professionali_Coinvolte;
		}
	}

	@Override
	public void setFigure_Professionali_Coinvolte(
		String Figure_Professionali_Coinvolte) {
		_Figure_Professionali_Coinvolte = Figure_Professionali_Coinvolte;
	}

	@Override
	public String getData_Inizio() {
		if (_Data_Inizio == null) {
			return StringPool.BLANK;
		}
		else {
			return _Data_Inizio;
		}
	}

	@Override
	public void setData_Inizio(String Data_Inizio) {
		_Data_Inizio = Data_Inizio;
	}

	@Override
	public String getData_Fine() {
		if (_Data_Fine == null) {
			return StringPool.BLANK;
		}
		else {
			return _Data_Fine;
		}
	}

	@Override
	public void setData_Fine(String Data_Fine) {
		_Data_Fine = Data_Fine;
	}

	@Override
	public String getTot_Ore() {
		if (_Tot_Ore == null) {
			return StringPool.BLANK;
		}
		else {
			return _Tot_Ore;
		}
	}

	@Override
	public void setTot_Ore(String Tot_Ore) {
		_Tot_Ore = Tot_Ore;
	}

	@Override
	public String getNr_Edizione() {
		if (_Nr_Edizione == null) {
			return StringPool.BLANK;
		}
		else {
			return _Nr_Edizione;
		}
	}

	@Override
	public void setNr_Edizione(String Nr_Edizione) {
		_Nr_Edizione = Nr_Edizione;
	}

	@Override
	public String getSede() {
		if (_Sede == null) {
			return StringPool.BLANK;
		}
		else {
			return _Sede;
		}
	}

	@Override
	public void setSede(String Sede) {
		_Sede = Sede;
	}

	@Override
	public String getAbstract() {
		if (_Abstract == null) {
			return StringPool.BLANK;
		}
		else {
			return _Abstract;
		}
	}

	@Override
	public void setAbstract(String Abstract) {
		_Abstract = Abstract;
	}

	@Override
	public String getDispensa_corso() {
		if (_Dispensa_corso == null) {
			return StringPool.BLANK;
		}
		else {
			return _Dispensa_corso;
		}
	}

	@Override
	public void setDispensa_corso(String Dispensa_corso) {
		_Dispensa_corso = Dispensa_corso;
	}

	@Override
	public long getAmmessi_al_corso() {
		return _Ammessi_al_corso;
	}

	@Override
	public void setAmmessi_al_corso(long Ammessi_al_corso) {
		_Ammessi_al_corso = Ammessi_al_corso;
	}

	@Override
	public String getScadenza_Iscrizioni() {
		if (_Scadenza_Iscrizioni == null) {
			return StringPool.BLANK;
		}
		else {
			return _Scadenza_Iscrizioni;
		}
	}

	@Override
	public void setScadenza_Iscrizioni(String Scadenza_Iscrizioni) {
		_Scadenza_Iscrizioni = Scadenza_Iscrizioni;
	}

	@Override
	public String getVisibile() {
		if (_Visibile == null) {
			return StringPool.BLANK;
		}
		else {
			return _Visibile;
		}
	}

	@Override
	public void setVisibile(String Visibile) {
		_Visibile = Visibile;
	}

	@Override
	public String getBloccato() {
		if (_Bloccato == null) {
			return StringPool.BLANK;
		}
		else {
			return _Bloccato;
		}
	}

	@Override
	public void setBloccato(String Bloccato) {
		_Bloccato = Bloccato;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			suiluppo_course.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public suiluppo_course toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (suiluppo_course)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		suiluppo_courseImpl suiluppo_courseImpl = new suiluppo_courseImpl();

		suiluppo_courseImpl.setCourse_id(getCourse_id());
		suiluppo_courseImpl.setDocente(getDocente());
		suiluppo_courseImpl.setEvento_Progetto(getEvento_Progetto());
		suiluppo_courseImpl.setTitolo(getTitolo());
		suiluppo_courseImpl.setDescrizione(getDescrizione());
		suiluppo_courseImpl.setFigure_Professionali_Coinvolte(getFigure_Professionali_Coinvolte());
		suiluppo_courseImpl.setData_Inizio(getData_Inizio());
		suiluppo_courseImpl.setData_Fine(getData_Fine());
		suiluppo_courseImpl.setTot_Ore(getTot_Ore());
		suiluppo_courseImpl.setNr_Edizione(getNr_Edizione());
		suiluppo_courseImpl.setSede(getSede());
		suiluppo_courseImpl.setAbstract(getAbstract());
		suiluppo_courseImpl.setDispensa_corso(getDispensa_corso());
		suiluppo_courseImpl.setAmmessi_al_corso(getAmmessi_al_corso());
		suiluppo_courseImpl.setScadenza_Iscrizioni(getScadenza_Iscrizioni());
		suiluppo_courseImpl.setVisibile(getVisibile());
		suiluppo_courseImpl.setBloccato(getBloccato());

		suiluppo_courseImpl.resetOriginalValues();

		return suiluppo_courseImpl;
	}

	@Override
	public int compareTo(suiluppo_course suiluppo_course) {
		long primaryKey = suiluppo_course.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof suiluppo_course)) {
			return false;
		}

		suiluppo_course suiluppo_course = (suiluppo_course)obj;

		long primaryKey = suiluppo_course.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<suiluppo_course> toCacheModel() {
		suiluppo_courseCacheModel suiluppo_courseCacheModel = new suiluppo_courseCacheModel();

		suiluppo_courseCacheModel.course_id = getCourse_id();

		suiluppo_courseCacheModel.Docente = getDocente();

		String Docente = suiluppo_courseCacheModel.Docente;

		if ((Docente != null) && (Docente.length() == 0)) {
			suiluppo_courseCacheModel.Docente = null;
		}

		suiluppo_courseCacheModel.Evento_Progetto = getEvento_Progetto();

		String Evento_Progetto = suiluppo_courseCacheModel.Evento_Progetto;

		if ((Evento_Progetto != null) && (Evento_Progetto.length() == 0)) {
			suiluppo_courseCacheModel.Evento_Progetto = null;
		}

		suiluppo_courseCacheModel.Titolo = getTitolo();

		String Titolo = suiluppo_courseCacheModel.Titolo;

		if ((Titolo != null) && (Titolo.length() == 0)) {
			suiluppo_courseCacheModel.Titolo = null;
		}

		suiluppo_courseCacheModel.Descrizione = getDescrizione();

		String Descrizione = suiluppo_courseCacheModel.Descrizione;

		if ((Descrizione != null) && (Descrizione.length() == 0)) {
			suiluppo_courseCacheModel.Descrizione = null;
		}

		suiluppo_courseCacheModel.Figure_Professionali_Coinvolte = getFigure_Professionali_Coinvolte();

		String Figure_Professionali_Coinvolte = suiluppo_courseCacheModel.Figure_Professionali_Coinvolte;

		if ((Figure_Professionali_Coinvolte != null) &&
				(Figure_Professionali_Coinvolte.length() == 0)) {
			suiluppo_courseCacheModel.Figure_Professionali_Coinvolte = null;
		}

		suiluppo_courseCacheModel.Data_Inizio = getData_Inizio();

		String Data_Inizio = suiluppo_courseCacheModel.Data_Inizio;

		if ((Data_Inizio != null) && (Data_Inizio.length() == 0)) {
			suiluppo_courseCacheModel.Data_Inizio = null;
		}

		suiluppo_courseCacheModel.Data_Fine = getData_Fine();

		String Data_Fine = suiluppo_courseCacheModel.Data_Fine;

		if ((Data_Fine != null) && (Data_Fine.length() == 0)) {
			suiluppo_courseCacheModel.Data_Fine = null;
		}

		suiluppo_courseCacheModel.Tot_Ore = getTot_Ore();

		String Tot_Ore = suiluppo_courseCacheModel.Tot_Ore;

		if ((Tot_Ore != null) && (Tot_Ore.length() == 0)) {
			suiluppo_courseCacheModel.Tot_Ore = null;
		}

		suiluppo_courseCacheModel.Nr_Edizione = getNr_Edizione();

		String Nr_Edizione = suiluppo_courseCacheModel.Nr_Edizione;

		if ((Nr_Edizione != null) && (Nr_Edizione.length() == 0)) {
			suiluppo_courseCacheModel.Nr_Edizione = null;
		}

		suiluppo_courseCacheModel.Sede = getSede();

		String Sede = suiluppo_courseCacheModel.Sede;

		if ((Sede != null) && (Sede.length() == 0)) {
			suiluppo_courseCacheModel.Sede = null;
		}

		suiluppo_courseCacheModel.Abstract = getAbstract();

		String Abstract = suiluppo_courseCacheModel.Abstract;

		if ((Abstract != null) && (Abstract.length() == 0)) {
			suiluppo_courseCacheModel.Abstract = null;
		}

		suiluppo_courseCacheModel.Dispensa_corso = getDispensa_corso();

		String Dispensa_corso = suiluppo_courseCacheModel.Dispensa_corso;

		if ((Dispensa_corso != null) && (Dispensa_corso.length() == 0)) {
			suiluppo_courseCacheModel.Dispensa_corso = null;
		}

		suiluppo_courseCacheModel.Ammessi_al_corso = getAmmessi_al_corso();

		suiluppo_courseCacheModel.Scadenza_Iscrizioni = getScadenza_Iscrizioni();

		String Scadenza_Iscrizioni = suiluppo_courseCacheModel.Scadenza_Iscrizioni;

		if ((Scadenza_Iscrizioni != null) &&
				(Scadenza_Iscrizioni.length() == 0)) {
			suiluppo_courseCacheModel.Scadenza_Iscrizioni = null;
		}

		suiluppo_courseCacheModel.Visibile = getVisibile();

		String Visibile = suiluppo_courseCacheModel.Visibile;

		if ((Visibile != null) && (Visibile.length() == 0)) {
			suiluppo_courseCacheModel.Visibile = null;
		}

		suiluppo_courseCacheModel.Bloccato = getBloccato();

		String Bloccato = suiluppo_courseCacheModel.Bloccato;

		if ((Bloccato != null) && (Bloccato.length() == 0)) {
			suiluppo_courseCacheModel.Bloccato = null;
		}

		return suiluppo_courseCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(35);

		sb.append("{course_id=");
		sb.append(getCourse_id());
		sb.append(", Docente=");
		sb.append(getDocente());
		sb.append(", Evento_Progetto=");
		sb.append(getEvento_Progetto());
		sb.append(", Titolo=");
		sb.append(getTitolo());
		sb.append(", Descrizione=");
		sb.append(getDescrizione());
		sb.append(", Figure_Professionali_Coinvolte=");
		sb.append(getFigure_Professionali_Coinvolte());
		sb.append(", Data_Inizio=");
		sb.append(getData_Inizio());
		sb.append(", Data_Fine=");
		sb.append(getData_Fine());
		sb.append(", Tot_Ore=");
		sb.append(getTot_Ore());
		sb.append(", Nr_Edizione=");
		sb.append(getNr_Edizione());
		sb.append(", Sede=");
		sb.append(getSede());
		sb.append(", Abstract=");
		sb.append(getAbstract());
		sb.append(", Dispensa_corso=");
		sb.append(getDispensa_corso());
		sb.append(", Ammessi_al_corso=");
		sb.append(getAmmessi_al_corso());
		sb.append(", Scadenza_Iscrizioni=");
		sb.append(getScadenza_Iscrizioni());
		sb.append(", Visibile=");
		sb.append(getVisibile());
		sb.append(", Bloccato=");
		sb.append(getBloccato());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(55);

		sb.append("<model><model-name>");
		sb.append("com.liferay.sample.model.suiluppo_course");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>course_id</column-name><column-value><![CDATA[");
		sb.append(getCourse_id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Docente</column-name><column-value><![CDATA[");
		sb.append(getDocente());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Evento_Progetto</column-name><column-value><![CDATA[");
		sb.append(getEvento_Progetto());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Titolo</column-name><column-value><![CDATA[");
		sb.append(getTitolo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Descrizione</column-name><column-value><![CDATA[");
		sb.append(getDescrizione());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Figure_Professionali_Coinvolte</column-name><column-value><![CDATA[");
		sb.append(getFigure_Professionali_Coinvolte());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Data_Inizio</column-name><column-value><![CDATA[");
		sb.append(getData_Inizio());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Data_Fine</column-name><column-value><![CDATA[");
		sb.append(getData_Fine());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Tot_Ore</column-name><column-value><![CDATA[");
		sb.append(getTot_Ore());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Nr_Edizione</column-name><column-value><![CDATA[");
		sb.append(getNr_Edizione());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Sede</column-name><column-value><![CDATA[");
		sb.append(getSede());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Abstract</column-name><column-value><![CDATA[");
		sb.append(getAbstract());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Dispensa_corso</column-name><column-value><![CDATA[");
		sb.append(getDispensa_corso());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Ammessi_al_corso</column-name><column-value><![CDATA[");
		sb.append(getAmmessi_al_corso());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Scadenza_Iscrizioni</column-name><column-value><![CDATA[");
		sb.append(getScadenza_Iscrizioni());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Visibile</column-name><column-value><![CDATA[");
		sb.append(getVisibile());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Bloccato</column-name><column-value><![CDATA[");
		sb.append(getBloccato());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = suiluppo_course.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			suiluppo_course.class
		};
	private long _course_id;
	private String _Docente;
	private String _Evento_Progetto;
	private String _Titolo;
	private String _Descrizione;
	private String _Figure_Professionali_Coinvolte;
	private String _Data_Inizio;
	private String _Data_Fine;
	private String _Tot_Ore;
	private String _Nr_Edizione;
	private String _Sede;
	private String _Abstract;
	private String _Dispensa_corso;
	private long _Ammessi_al_corso;
	private String _Scadenza_Iscrizioni;
	private String _Visibile;
	private String _Bloccato;
	private suiluppo_course _escapedModel;
}