/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.daffo.model.impl;

import com.liferay.daffo.model.News_Blogs;
import com.liferay.daffo.model.News_BlogsModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the News_Blogs service. Represents a row in the &quot;News_Blogs&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.liferay.daffo.model.News_BlogsModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link News_BlogsImpl}.
 * </p>
 *
 * @author Naveen Kumar
 * @see News_BlogsImpl
 * @see com.liferay.daffo.model.News_Blogs
 * @see com.liferay.daffo.model.News_BlogsModel
 * @generated
 */
public class News_BlogsModelImpl extends BaseModelImpl<News_Blogs>
	implements News_BlogsModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a news_ blogs model instance should use the {@link com.liferay.daffo.model.News_Blogs} interface instead.
	 */
	public static final String TABLE_NAME = "News_Blogs";
	public static final Object[][] TABLE_COLUMNS = {
			{ "News_Blogs_Id", Types.BIGINT },
			{ "title", Types.VARCHAR },
			{ "body", Types.VARCHAR },
			{ "Publish_Date", Types.TIMESTAMP },
			{ "Expiration_Date", Types.TIMESTAMP },
			{ "author", Types.VARCHAR },
			{ "visible", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table News_Blogs (News_Blogs_Id LONG not null primary key,title VARCHAR(75) null,body VARCHAR(75) null,Publish_Date DATE null,Expiration_Date DATE null,author VARCHAR(75) null,visible VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table News_Blogs";
	public static final String ORDER_BY_JPQL = " ORDER BY news_Blogs.News_Blogs_Id ASC";
	public static final String ORDER_BY_SQL = " ORDER BY News_Blogs.News_Blogs_Id ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.liferay.daffo.model.News_Blogs"),
			false);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.liferay.daffo.model.News_Blogs"),
			false);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.liferay.daffo.model.News_Blogs"));

	public News_BlogsModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _News_Blogs_Id;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setNews_Blogs_Id(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _News_Blogs_Id;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return News_Blogs.class;
	}

	@Override
	public String getModelClassName() {
		return News_Blogs.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("News_Blogs_Id", getNews_Blogs_Id());
		attributes.put("title", getTitle());
		attributes.put("body", getBody());
		attributes.put("Publish_Date", getPublish_Date());
		attributes.put("Expiration_Date", getExpiration_Date());
		attributes.put("author", getAuthor());
		attributes.put("visible", getVisible());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long News_Blogs_Id = (Long)attributes.get("News_Blogs_Id");

		if (News_Blogs_Id != null) {
			setNews_Blogs_Id(News_Blogs_Id);
		}

		String title = (String)attributes.get("title");

		if (title != null) {
			setTitle(title);
		}

		String body = (String)attributes.get("body");

		if (body != null) {
			setBody(body);
		}

		Date Publish_Date = (Date)attributes.get("Publish_Date");

		if (Publish_Date != null) {
			setPublish_Date(Publish_Date);
		}

		Date Expiration_Date = (Date)attributes.get("Expiration_Date");

		if (Expiration_Date != null) {
			setExpiration_Date(Expiration_Date);
		}

		String author = (String)attributes.get("author");

		if (author != null) {
			setAuthor(author);
		}

		String visible = (String)attributes.get("visible");

		if (visible != null) {
			setVisible(visible);
		}
	}

	@Override
	public long getNews_Blogs_Id() {
		return _News_Blogs_Id;
	}

	@Override
	public void setNews_Blogs_Id(long News_Blogs_Id) {
		_News_Blogs_Id = News_Blogs_Id;
	}

	@Override
	public String getTitle() {
		if (_title == null) {
			return StringPool.BLANK;
		}
		else {
			return _title;
		}
	}

	@Override
	public void setTitle(String title) {
		_title = title;
	}

	@Override
	public String getBody() {
		if (_body == null) {
			return StringPool.BLANK;
		}
		else {
			return _body;
		}
	}

	@Override
	public void setBody(String body) {
		_body = body;
	}

	@Override
	public Date getPublish_Date() {
		return _Publish_Date;
	}

	@Override
	public void setPublish_Date(Date Publish_Date) {
		_Publish_Date = Publish_Date;
	}

	@Override
	public Date getExpiration_Date() {
		return _Expiration_Date;
	}

	@Override
	public void setExpiration_Date(Date Expiration_Date) {
		_Expiration_Date = Expiration_Date;
	}

	@Override
	public String getAuthor() {
		if (_author == null) {
			return StringPool.BLANK;
		}
		else {
			return _author;
		}
	}

	@Override
	public void setAuthor(String author) {
		_author = author;
	}

	@Override
	public String getVisible() {
		if (_visible == null) {
			return StringPool.BLANK;
		}
		else {
			return _visible;
		}
	}

	@Override
	public void setVisible(String visible) {
		_visible = visible;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			News_Blogs.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public News_Blogs toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (News_Blogs)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		News_BlogsImpl news_BlogsImpl = new News_BlogsImpl();

		news_BlogsImpl.setNews_Blogs_Id(getNews_Blogs_Id());
		news_BlogsImpl.setTitle(getTitle());
		news_BlogsImpl.setBody(getBody());
		news_BlogsImpl.setPublish_Date(getPublish_Date());
		news_BlogsImpl.setExpiration_Date(getExpiration_Date());
		news_BlogsImpl.setAuthor(getAuthor());
		news_BlogsImpl.setVisible(getVisible());

		news_BlogsImpl.resetOriginalValues();

		return news_BlogsImpl;
	}

	@Override
	public int compareTo(News_Blogs news_Blogs) {
		long primaryKey = news_Blogs.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof News_Blogs)) {
			return false;
		}

		News_Blogs news_Blogs = (News_Blogs)obj;

		long primaryKey = news_Blogs.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<News_Blogs> toCacheModel() {
		News_BlogsCacheModel news_BlogsCacheModel = new News_BlogsCacheModel();

		news_BlogsCacheModel.News_Blogs_Id = getNews_Blogs_Id();

		news_BlogsCacheModel.title = getTitle();

		String title = news_BlogsCacheModel.title;

		if ((title != null) && (title.length() == 0)) {
			news_BlogsCacheModel.title = null;
		}

		news_BlogsCacheModel.body = getBody();

		String body = news_BlogsCacheModel.body;

		if ((body != null) && (body.length() == 0)) {
			news_BlogsCacheModel.body = null;
		}

		Date Publish_Date = getPublish_Date();

		if (Publish_Date != null) {
			news_BlogsCacheModel.Publish_Date = Publish_Date.getTime();
		}
		else {
			news_BlogsCacheModel.Publish_Date = Long.MIN_VALUE;
		}

		Date Expiration_Date = getExpiration_Date();

		if (Expiration_Date != null) {
			news_BlogsCacheModel.Expiration_Date = Expiration_Date.getTime();
		}
		else {
			news_BlogsCacheModel.Expiration_Date = Long.MIN_VALUE;
		}

		news_BlogsCacheModel.author = getAuthor();

		String author = news_BlogsCacheModel.author;

		if ((author != null) && (author.length() == 0)) {
			news_BlogsCacheModel.author = null;
		}

		news_BlogsCacheModel.visible = getVisible();

		String visible = news_BlogsCacheModel.visible;

		if ((visible != null) && (visible.length() == 0)) {
			news_BlogsCacheModel.visible = null;
		}

		return news_BlogsCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(15);

		sb.append("{News_Blogs_Id=");
		sb.append(getNews_Blogs_Id());
		sb.append(", title=");
		sb.append(getTitle());
		sb.append(", body=");
		sb.append(getBody());
		sb.append(", Publish_Date=");
		sb.append(getPublish_Date());
		sb.append(", Expiration_Date=");
		sb.append(getExpiration_Date());
		sb.append(", author=");
		sb.append(getAuthor());
		sb.append(", visible=");
		sb.append(getVisible());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(25);

		sb.append("<model><model-name>");
		sb.append("com.liferay.daffo.model.News_Blogs");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>News_Blogs_Id</column-name><column-value><![CDATA[");
		sb.append(getNews_Blogs_Id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>title</column-name><column-value><![CDATA[");
		sb.append(getTitle());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>body</column-name><column-value><![CDATA[");
		sb.append(getBody());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Publish_Date</column-name><column-value><![CDATA[");
		sb.append(getPublish_Date());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Expiration_Date</column-name><column-value><![CDATA[");
		sb.append(getExpiration_Date());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>author</column-name><column-value><![CDATA[");
		sb.append(getAuthor());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>visible</column-name><column-value><![CDATA[");
		sb.append(getVisible());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = News_Blogs.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			News_Blogs.class
		};
	private long _News_Blogs_Id;
	private String _title;
	private String _body;
	private Date _Publish_Date;
	private Date _Expiration_Date;
	private String _author;
	private String _visible;
	private News_Blogs _escapedModel;
}