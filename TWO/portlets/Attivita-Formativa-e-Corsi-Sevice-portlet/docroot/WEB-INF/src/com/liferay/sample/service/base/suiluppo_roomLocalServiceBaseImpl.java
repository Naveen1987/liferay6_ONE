/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.sample.service.base;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.bean.IdentifiableBean;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.dao.orm.DynamicQuery;
import com.liferay.portal.kernel.dao.orm.DynamicQueryFactoryUtil;
import com.liferay.portal.kernel.dao.orm.Projection;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.search.Indexable;
import com.liferay.portal.kernel.search.IndexableType;
import com.liferay.portal.kernel.util.OrderByComparator;
import com.liferay.portal.model.PersistedModel;
import com.liferay.portal.service.BaseLocalServiceImpl;
import com.liferay.portal.service.PersistedModelLocalServiceRegistryUtil;
import com.liferay.portal.service.persistence.UserPersistence;

import com.liferay.sample.model.suiluppo_room;
import com.liferay.sample.service.persistence.BookedEquipmentPersistence;
import com.liferay.sample.service.persistence.EquipmentPersistence;
import com.liferay.sample.service.persistence.suiluppo_applicationPersistence;
import com.liferay.sample.service.persistence.suiluppo_coursePersistence;
import com.liferay.sample.service.persistence.suiluppo_roomPersistence;
import com.liferay.sample.service.persistence.suiluppo_room_allocationPersistence;
import com.liferay.sample.service.persistence.suiluppo_room_allocation_archivePersistence;
import com.liferay.sample.service.suiluppo_roomLocalService;

import java.io.Serializable;

import java.util.List;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the suiluppo_room local service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link com.liferay.sample.service.impl.suiluppo_roomLocalServiceImpl}.
 * </p>
 *
 * @author Naveen Kumar
 * @see com.liferay.sample.service.impl.suiluppo_roomLocalServiceImpl
 * @see com.liferay.sample.service.suiluppo_roomLocalServiceUtil
 * @generated
 */
public abstract class suiluppo_roomLocalServiceBaseImpl
	extends BaseLocalServiceImpl implements suiluppo_roomLocalService,
		IdentifiableBean {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Always use {@link com.liferay.sample.service.suiluppo_roomLocalServiceUtil} to access the suiluppo_room local service.
	 */

	/**
	 * Adds the suiluppo_room to the database. Also notifies the appropriate model listeners.
	 *
	 * @param suiluppo_room the suiluppo_room
	 * @return the suiluppo_room that was added
	 * @throws SystemException if a system exception occurred
	 */
	@Indexable(type = IndexableType.REINDEX)
	@Override
	public suiluppo_room addsuiluppo_room(suiluppo_room suiluppo_room)
		throws SystemException {
		suiluppo_room.setNew(true);

		return suiluppo_roomPersistence.update(suiluppo_room);
	}

	/**
	 * Creates a new suiluppo_room with the primary key. Does not add the suiluppo_room to the database.
	 *
	 * @param roomID the primary key for the new suiluppo_room
	 * @return the new suiluppo_room
	 */
	@Override
	public suiluppo_room createsuiluppo_room(long roomID) {
		return suiluppo_roomPersistence.create(roomID);
	}

	/**
	 * Deletes the suiluppo_room with the primary key from the database. Also notifies the appropriate model listeners.
	 *
	 * @param roomID the primary key of the suiluppo_room
	 * @return the suiluppo_room that was removed
	 * @throws PortalException if a suiluppo_room with the primary key could not be found
	 * @throws SystemException if a system exception occurred
	 */
	@Indexable(type = IndexableType.DELETE)
	@Override
	public suiluppo_room deletesuiluppo_room(long roomID)
		throws PortalException, SystemException {
		return suiluppo_roomPersistence.remove(roomID);
	}

	/**
	 * Deletes the suiluppo_room from the database. Also notifies the appropriate model listeners.
	 *
	 * @param suiluppo_room the suiluppo_room
	 * @return the suiluppo_room that was removed
	 * @throws SystemException if a system exception occurred
	 */
	@Indexable(type = IndexableType.DELETE)
	@Override
	public suiluppo_room deletesuiluppo_room(suiluppo_room suiluppo_room)
		throws SystemException {
		return suiluppo_roomPersistence.remove(suiluppo_room);
	}

	@Override
	public DynamicQuery dynamicQuery() {
		Class<?> clazz = getClass();

		return DynamicQueryFactoryUtil.forClass(suiluppo_room.class,
			clazz.getClassLoader());
	}

	/**
	 * Performs a dynamic query on the database and returns the matching rows.
	 *
	 * @param dynamicQuery the dynamic query
	 * @return the matching rows
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	@SuppressWarnings("rawtypes")
	public List dynamicQuery(DynamicQuery dynamicQuery)
		throws SystemException {
		return suiluppo_roomPersistence.findWithDynamicQuery(dynamicQuery);
	}

	/**
	 * Performs a dynamic query on the database and returns a range of the matching rows.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link com.liferay.sample.model.impl.suiluppo_roomModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param dynamicQuery the dynamic query
	 * @param start the lower bound of the range of model instances
	 * @param end the upper bound of the range of model instances (not inclusive)
	 * @return the range of matching rows
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	@SuppressWarnings("rawtypes")
	public List dynamicQuery(DynamicQuery dynamicQuery, int start, int end)
		throws SystemException {
		return suiluppo_roomPersistence.findWithDynamicQuery(dynamicQuery,
			start, end);
	}

	/**
	 * Performs a dynamic query on the database and returns an ordered range of the matching rows.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link com.liferay.sample.model.impl.suiluppo_roomModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param dynamicQuery the dynamic query
	 * @param start the lower bound of the range of model instances
	 * @param end the upper bound of the range of model instances (not inclusive)
	 * @param orderByComparator the comparator to order the results by (optionally <code>null</code>)
	 * @return the ordered range of matching rows
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	@SuppressWarnings("rawtypes")
	public List dynamicQuery(DynamicQuery dynamicQuery, int start, int end,
		OrderByComparator orderByComparator) throws SystemException {
		return suiluppo_roomPersistence.findWithDynamicQuery(dynamicQuery,
			start, end, orderByComparator);
	}

	/**
	 * Returns the number of rows that match the dynamic query.
	 *
	 * @param dynamicQuery the dynamic query
	 * @return the number of rows that match the dynamic query
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public long dynamicQueryCount(DynamicQuery dynamicQuery)
		throws SystemException {
		return suiluppo_roomPersistence.countWithDynamicQuery(dynamicQuery);
	}

	/**
	 * Returns the number of rows that match the dynamic query.
	 *
	 * @param dynamicQuery the dynamic query
	 * @param projection the projection to apply to the query
	 * @return the number of rows that match the dynamic query
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public long dynamicQueryCount(DynamicQuery dynamicQuery,
		Projection projection) throws SystemException {
		return suiluppo_roomPersistence.countWithDynamicQuery(dynamicQuery,
			projection);
	}

	@Override
	public suiluppo_room fetchsuiluppo_room(long roomID)
		throws SystemException {
		return suiluppo_roomPersistence.fetchByPrimaryKey(roomID);
	}

	/**
	 * Returns the suiluppo_room with the primary key.
	 *
	 * @param roomID the primary key of the suiluppo_room
	 * @return the suiluppo_room
	 * @throws PortalException if a suiluppo_room with the primary key could not be found
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public suiluppo_room getsuiluppo_room(long roomID)
		throws PortalException, SystemException {
		return suiluppo_roomPersistence.findByPrimaryKey(roomID);
	}

	@Override
	public PersistedModel getPersistedModel(Serializable primaryKeyObj)
		throws PortalException, SystemException {
		return suiluppo_roomPersistence.findByPrimaryKey(primaryKeyObj);
	}

	/**
	 * Returns a range of all the suiluppo_rooms.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link com.liferay.sample.model.impl.suiluppo_roomModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param start the lower bound of the range of suiluppo_rooms
	 * @param end the upper bound of the range of suiluppo_rooms (not inclusive)
	 * @return the range of suiluppo_rooms
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public List<suiluppo_room> getsuiluppo_rooms(int start, int end)
		throws SystemException {
		return suiluppo_roomPersistence.findAll(start, end);
	}

	/**
	 * Returns the number of suiluppo_rooms.
	 *
	 * @return the number of suiluppo_rooms
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public int getsuiluppo_roomsCount() throws SystemException {
		return suiluppo_roomPersistence.countAll();
	}

	/**
	 * Updates the suiluppo_room in the database or adds it if it does not yet exist. Also notifies the appropriate model listeners.
	 *
	 * @param suiluppo_room the suiluppo_room
	 * @return the suiluppo_room that was updated
	 * @throws SystemException if a system exception occurred
	 */
	@Indexable(type = IndexableType.REINDEX)
	@Override
	public suiluppo_room updatesuiluppo_room(suiluppo_room suiluppo_room)
		throws SystemException {
		return suiluppo_roomPersistence.update(suiluppo_room);
	}

	/**
	 * Returns the booked equipment local service.
	 *
	 * @return the booked equipment local service
	 */
	public com.liferay.sample.service.BookedEquipmentLocalService getBookedEquipmentLocalService() {
		return bookedEquipmentLocalService;
	}

	/**
	 * Sets the booked equipment local service.
	 *
	 * @param bookedEquipmentLocalService the booked equipment local service
	 */
	public void setBookedEquipmentLocalService(
		com.liferay.sample.service.BookedEquipmentLocalService bookedEquipmentLocalService) {
		this.bookedEquipmentLocalService = bookedEquipmentLocalService;
	}

	/**
	 * Returns the booked equipment persistence.
	 *
	 * @return the booked equipment persistence
	 */
	public BookedEquipmentPersistence getBookedEquipmentPersistence() {
		return bookedEquipmentPersistence;
	}

	/**
	 * Sets the booked equipment persistence.
	 *
	 * @param bookedEquipmentPersistence the booked equipment persistence
	 */
	public void setBookedEquipmentPersistence(
		BookedEquipmentPersistence bookedEquipmentPersistence) {
		this.bookedEquipmentPersistence = bookedEquipmentPersistence;
	}

	/**
	 * Returns the equipment local service.
	 *
	 * @return the equipment local service
	 */
	public com.liferay.sample.service.EquipmentLocalService getEquipmentLocalService() {
		return equipmentLocalService;
	}

	/**
	 * Sets the equipment local service.
	 *
	 * @param equipmentLocalService the equipment local service
	 */
	public void setEquipmentLocalService(
		com.liferay.sample.service.EquipmentLocalService equipmentLocalService) {
		this.equipmentLocalService = equipmentLocalService;
	}

	/**
	 * Returns the equipment persistence.
	 *
	 * @return the equipment persistence
	 */
	public EquipmentPersistence getEquipmentPersistence() {
		return equipmentPersistence;
	}

	/**
	 * Sets the equipment persistence.
	 *
	 * @param equipmentPersistence the equipment persistence
	 */
	public void setEquipmentPersistence(
		EquipmentPersistence equipmentPersistence) {
		this.equipmentPersistence = equipmentPersistence;
	}

	/**
	 * Returns the suiluppo_application local service.
	 *
	 * @return the suiluppo_application local service
	 */
	public com.liferay.sample.service.suiluppo_applicationLocalService getsuiluppo_applicationLocalService() {
		return suiluppo_applicationLocalService;
	}

	/**
	 * Sets the suiluppo_application local service.
	 *
	 * @param suiluppo_applicationLocalService the suiluppo_application local service
	 */
	public void setsuiluppo_applicationLocalService(
		com.liferay.sample.service.suiluppo_applicationLocalService suiluppo_applicationLocalService) {
		this.suiluppo_applicationLocalService = suiluppo_applicationLocalService;
	}

	/**
	 * Returns the suiluppo_application persistence.
	 *
	 * @return the suiluppo_application persistence
	 */
	public suiluppo_applicationPersistence getsuiluppo_applicationPersistence() {
		return suiluppo_applicationPersistence;
	}

	/**
	 * Sets the suiluppo_application persistence.
	 *
	 * @param suiluppo_applicationPersistence the suiluppo_application persistence
	 */
	public void setsuiluppo_applicationPersistence(
		suiluppo_applicationPersistence suiluppo_applicationPersistence) {
		this.suiluppo_applicationPersistence = suiluppo_applicationPersistence;
	}

	/**
	 * Returns the suiluppo_course local service.
	 *
	 * @return the suiluppo_course local service
	 */
	public com.liferay.sample.service.suiluppo_courseLocalService getsuiluppo_courseLocalService() {
		return suiluppo_courseLocalService;
	}

	/**
	 * Sets the suiluppo_course local service.
	 *
	 * @param suiluppo_courseLocalService the suiluppo_course local service
	 */
	public void setsuiluppo_courseLocalService(
		com.liferay.sample.service.suiluppo_courseLocalService suiluppo_courseLocalService) {
		this.suiluppo_courseLocalService = suiluppo_courseLocalService;
	}

	/**
	 * Returns the suiluppo_course persistence.
	 *
	 * @return the suiluppo_course persistence
	 */
	public suiluppo_coursePersistence getsuiluppo_coursePersistence() {
		return suiluppo_coursePersistence;
	}

	/**
	 * Sets the suiluppo_course persistence.
	 *
	 * @param suiluppo_coursePersistence the suiluppo_course persistence
	 */
	public void setsuiluppo_coursePersistence(
		suiluppo_coursePersistence suiluppo_coursePersistence) {
		this.suiluppo_coursePersistence = suiluppo_coursePersistence;
	}

	/**
	 * Returns the suiluppo_room local service.
	 *
	 * @return the suiluppo_room local service
	 */
	public com.liferay.sample.service.suiluppo_roomLocalService getsuiluppo_roomLocalService() {
		return suiluppo_roomLocalService;
	}

	/**
	 * Sets the suiluppo_room local service.
	 *
	 * @param suiluppo_roomLocalService the suiluppo_room local service
	 */
	public void setsuiluppo_roomLocalService(
		com.liferay.sample.service.suiluppo_roomLocalService suiluppo_roomLocalService) {
		this.suiluppo_roomLocalService = suiluppo_roomLocalService;
	}

	/**
	 * Returns the suiluppo_room persistence.
	 *
	 * @return the suiluppo_room persistence
	 */
	public suiluppo_roomPersistence getsuiluppo_roomPersistence() {
		return suiluppo_roomPersistence;
	}

	/**
	 * Sets the suiluppo_room persistence.
	 *
	 * @param suiluppo_roomPersistence the suiluppo_room persistence
	 */
	public void setsuiluppo_roomPersistence(
		suiluppo_roomPersistence suiluppo_roomPersistence) {
		this.suiluppo_roomPersistence = suiluppo_roomPersistence;
	}

	/**
	 * Returns the suiluppo_room_allocation local service.
	 *
	 * @return the suiluppo_room_allocation local service
	 */
	public com.liferay.sample.service.suiluppo_room_allocationLocalService getsuiluppo_room_allocationLocalService() {
		return suiluppo_room_allocationLocalService;
	}

	/**
	 * Sets the suiluppo_room_allocation local service.
	 *
	 * @param suiluppo_room_allocationLocalService the suiluppo_room_allocation local service
	 */
	public void setsuiluppo_room_allocationLocalService(
		com.liferay.sample.service.suiluppo_room_allocationLocalService suiluppo_room_allocationLocalService) {
		this.suiluppo_room_allocationLocalService = suiluppo_room_allocationLocalService;
	}

	/**
	 * Returns the suiluppo_room_allocation persistence.
	 *
	 * @return the suiluppo_room_allocation persistence
	 */
	public suiluppo_room_allocationPersistence getsuiluppo_room_allocationPersistence() {
		return suiluppo_room_allocationPersistence;
	}

	/**
	 * Sets the suiluppo_room_allocation persistence.
	 *
	 * @param suiluppo_room_allocationPersistence the suiluppo_room_allocation persistence
	 */
	public void setsuiluppo_room_allocationPersistence(
		suiluppo_room_allocationPersistence suiluppo_room_allocationPersistence) {
		this.suiluppo_room_allocationPersistence = suiluppo_room_allocationPersistence;
	}

	/**
	 * Returns the suiluppo_room_allocation_archive local service.
	 *
	 * @return the suiluppo_room_allocation_archive local service
	 */
	public com.liferay.sample.service.suiluppo_room_allocation_archiveLocalService getsuiluppo_room_allocation_archiveLocalService() {
		return suiluppo_room_allocation_archiveLocalService;
	}

	/**
	 * Sets the suiluppo_room_allocation_archive local service.
	 *
	 * @param suiluppo_room_allocation_archiveLocalService the suiluppo_room_allocation_archive local service
	 */
	public void setsuiluppo_room_allocation_archiveLocalService(
		com.liferay.sample.service.suiluppo_room_allocation_archiveLocalService suiluppo_room_allocation_archiveLocalService) {
		this.suiluppo_room_allocation_archiveLocalService = suiluppo_room_allocation_archiveLocalService;
	}

	/**
	 * Returns the suiluppo_room_allocation_archive persistence.
	 *
	 * @return the suiluppo_room_allocation_archive persistence
	 */
	public suiluppo_room_allocation_archivePersistence getsuiluppo_room_allocation_archivePersistence() {
		return suiluppo_room_allocation_archivePersistence;
	}

	/**
	 * Sets the suiluppo_room_allocation_archive persistence.
	 *
	 * @param suiluppo_room_allocation_archivePersistence the suiluppo_room_allocation_archive persistence
	 */
	public void setsuiluppo_room_allocation_archivePersistence(
		suiluppo_room_allocation_archivePersistence suiluppo_room_allocation_archivePersistence) {
		this.suiluppo_room_allocation_archivePersistence = suiluppo_room_allocation_archivePersistence;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public com.liferay.counter.service.CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(
		com.liferay.counter.service.CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public com.liferay.portal.service.ResourceLocalService getResourceLocalService() {
		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		com.liferay.portal.service.ResourceLocalService resourceLocalService) {
		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public com.liferay.portal.service.UserLocalService getUserLocalService() {
		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(
		com.liferay.portal.service.UserLocalService userLocalService) {
		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user remote service.
	 *
	 * @return the user remote service
	 */
	public com.liferay.portal.service.UserService getUserService() {
		return userService;
	}

	/**
	 * Sets the user remote service.
	 *
	 * @param userService the user remote service
	 */
	public void setUserService(
		com.liferay.portal.service.UserService userService) {
		this.userService = userService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	public void afterPropertiesSet() {
		Class<?> clazz = getClass();

		_classLoader = clazz.getClassLoader();

		PersistedModelLocalServiceRegistryUtil.register("com.liferay.sample.model.suiluppo_room",
			suiluppo_roomLocalService);
	}

	public void destroy() {
		PersistedModelLocalServiceRegistryUtil.unregister(
			"com.liferay.sample.model.suiluppo_room");
	}

	/**
	 * Returns the Spring bean ID for this bean.
	 *
	 * @return the Spring bean ID for this bean
	 */
	@Override
	public String getBeanIdentifier() {
		return _beanIdentifier;
	}

	/**
	 * Sets the Spring bean ID for this bean.
	 *
	 * @param beanIdentifier the Spring bean ID for this bean
	 */
	@Override
	public void setBeanIdentifier(String beanIdentifier) {
		_beanIdentifier = beanIdentifier;
	}

	@Override
	public Object invokeMethod(String name, String[] parameterTypes,
		Object[] arguments) throws Throwable {
		Thread currentThread = Thread.currentThread();

		ClassLoader contextClassLoader = currentThread.getContextClassLoader();

		if (contextClassLoader != _classLoader) {
			currentThread.setContextClassLoader(_classLoader);
		}

		try {
			return _clpInvoker.invokeMethod(name, parameterTypes, arguments);
		}
		finally {
			if (contextClassLoader != _classLoader) {
				currentThread.setContextClassLoader(contextClassLoader);
			}
		}
	}

	protected Class<?> getModelClass() {
		return suiluppo_room.class;
	}

	protected String getModelClassName() {
		return suiluppo_room.class.getName();
	}

	/**
	 * Performs an SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) throws SystemException {
		try {
			DataSource dataSource = suiluppo_roomPersistence.getDataSource();

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql, new int[0]);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = com.liferay.sample.service.BookedEquipmentLocalService.class)
	protected com.liferay.sample.service.BookedEquipmentLocalService bookedEquipmentLocalService;
	@BeanReference(type = BookedEquipmentPersistence.class)
	protected BookedEquipmentPersistence bookedEquipmentPersistence;
	@BeanReference(type = com.liferay.sample.service.EquipmentLocalService.class)
	protected com.liferay.sample.service.EquipmentLocalService equipmentLocalService;
	@BeanReference(type = EquipmentPersistence.class)
	protected EquipmentPersistence equipmentPersistence;
	@BeanReference(type = com.liferay.sample.service.suiluppo_applicationLocalService.class)
	protected com.liferay.sample.service.suiluppo_applicationLocalService suiluppo_applicationLocalService;
	@BeanReference(type = suiluppo_applicationPersistence.class)
	protected suiluppo_applicationPersistence suiluppo_applicationPersistence;
	@BeanReference(type = com.liferay.sample.service.suiluppo_courseLocalService.class)
	protected com.liferay.sample.service.suiluppo_courseLocalService suiluppo_courseLocalService;
	@BeanReference(type = suiluppo_coursePersistence.class)
	protected suiluppo_coursePersistence suiluppo_coursePersistence;
	@BeanReference(type = com.liferay.sample.service.suiluppo_roomLocalService.class)
	protected com.liferay.sample.service.suiluppo_roomLocalService suiluppo_roomLocalService;
	@BeanReference(type = suiluppo_roomPersistence.class)
	protected suiluppo_roomPersistence suiluppo_roomPersistence;
	@BeanReference(type = com.liferay.sample.service.suiluppo_room_allocationLocalService.class)
	protected com.liferay.sample.service.suiluppo_room_allocationLocalService suiluppo_room_allocationLocalService;
	@BeanReference(type = suiluppo_room_allocationPersistence.class)
	protected suiluppo_room_allocationPersistence suiluppo_room_allocationPersistence;
	@BeanReference(type = com.liferay.sample.service.suiluppo_room_allocation_archiveLocalService.class)
	protected com.liferay.sample.service.suiluppo_room_allocation_archiveLocalService suiluppo_room_allocation_archiveLocalService;
	@BeanReference(type = suiluppo_room_allocation_archivePersistence.class)
	protected suiluppo_room_allocation_archivePersistence suiluppo_room_allocation_archivePersistence;
	@BeanReference(type = com.liferay.counter.service.CounterLocalService.class)
	protected com.liferay.counter.service.CounterLocalService counterLocalService;
	@BeanReference(type = com.liferay.portal.service.ResourceLocalService.class)
	protected com.liferay.portal.service.ResourceLocalService resourceLocalService;
	@BeanReference(type = com.liferay.portal.service.UserLocalService.class)
	protected com.liferay.portal.service.UserLocalService userLocalService;
	@BeanReference(type = com.liferay.portal.service.UserService.class)
	protected com.liferay.portal.service.UserService userService;
	@BeanReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;
	private String _beanIdentifier;
	private ClassLoader _classLoader;
	private suiluppo_roomLocalServiceClpInvoker _clpInvoker = new suiluppo_roomLocalServiceClpInvoker();
}